{"version":3,"sources":["components/SearchBar.js","components/WineList.js","components/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","_ref","wines","setFilteredWines","setPage","search","setSearch","useState","onlyVegan","setOnlyVegan","searchType","setSearchType","selectedCountry","setSelectedCountry","openAdvanced","setOpenAdvanced","advancedFilters","setAdvancedFilters","name","producer","country","vegan","countries","Set","map","wine","origin","sort","isVegan","label","labelLower","toLowerCase","includes","handleFilter","searchStr","arguments","length","undefined","type","filtered","filter","React","createElement","Fragment","Paper","sx","p","mb","Grid","container","spacing","alignItems","item","xs","md","TextField","fullWidth","value","onChange","e","target","FormControl","InputLabel","Select","MenuItem","key","FormControlLabel","control","Checkbox","checked","Button","variant","onClick","Dialog","open","onClose","DialogTitle","DialogContent","pt","_objectSpread","DialogActions","handleAdvancedSearch","WineList","page","rowsPerPage","setRowsPerPage","mt","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","slice","index","hover","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","Statistics","onShowGlobalStats","totalWines","veganWines","uniqueCountries","currentCountry","Box","Typography","toFixed","theme","createTheme","palette","mode","primary","main","App","setWines","filteredWines","openStats","setOpenStats","useEffect","Papa","parse","download","header","complete","results","validData","data","ThemeProvider","CssBaseline","Container","maxWidth","py","getGlobalStats","countryStats","reduce","acc","total","Object","entries","a","b","stats","percentage","stat","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c099c6ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Paper, TextField, Checkbox, FormControlLabel, Grid, MenuItem, Select, FormControl, InputLabel, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\n\nfunction SearchBar({ wines, setFilteredWines, setPage }) {\n const [search, setSearch] = useState('');\n const [onlyVegan, setOnlyVegan] = useState(false);\n const [searchType, setSearchType] = useState('all');\n const [selectedCountry, setSelectedCountry] = useState('');\n const [openAdvanced, setOpenAdvanced] = useState(false);\n const [advancedFilters, setAdvancedFilters] = useState({\n   name: '',\n   producer: '',\n   country: '',\n   vegan: false\n });\n\n const countries = [...new Set(wines.map(wine => wine.origin))].sort();\n\n const isVegan = (label) => {\n   const labelLower = label.toLowerCase();\n   return !labelLower.includes('not vegan') && labelLower.includes('vegan friendly');\n };\n\n const handleFilter = (searchStr = search, vegan = onlyVegan, type = searchType, country = selectedCountry) => {\n   let filtered = wines;\n\n   if (searchStr) {\n     switch(type) {\n       case 'name':\n         filtered = filtered.filter(wine => wine.name.toLowerCase().includes(searchStr.toLowerCase()));\n         break;\n       case 'producer':\n         filtered = filtered.filter(wine => wine.producer.toLowerCase().includes(searchStr.toLowerCase()));\n         break;\n       case 'all':\n         filtered = filtered.filter(wine => \n           wine.name.toLowerCase().includes(searchStr.toLowerCase()) ||\n           wine.producer.toLowerCase().includes(searchStr.toLowerCase())\n         );\n         break;\n       default:\n         // Se il tipo di ricerca non corrisponde a nessun caso, mantieni tutti i vini\n         filtered = wines;\n         break;\n     }\n   }\n\n   if (country) {\n     filtered = filtered.filter(wine => wine.origin === country);\n   }\n\n   if (vegan) {\n     filtered = filtered.filter(wine => isVegan(wine.label));\n   }\n\n   setFilteredWines(filtered);\n   setPage(0);\n };\n\n const handleAdvancedSearch = () => {\n   let filtered = wines;\n   \n   if (advancedFilters.name) {\n     filtered = filtered.filter(wine => \n       wine.name.toLowerCase().includes(advancedFilters.name.toLowerCase())\n     );\n   }\n   \n   if (advancedFilters.producer) {\n     filtered = filtered.filter(wine => \n       wine.producer.toLowerCase().includes(advancedFilters.producer.toLowerCase())\n     );\n   }\n   \n   if (advancedFilters.country) {\n     filtered = filtered.filter(wine => wine.origin === advancedFilters.country);\n   }\n   \n   if (advancedFilters.vegan) {\n     filtered = filtered.filter(wine => isVegan(wine.label));\n   }\n   \n   setFilteredWines(filtered);\n   setPage(0);\n   setOpenAdvanced(false);\n };\n\n return (\n   <>\n     <Paper sx={{ p: 2, mb: 2 }}>\n       <Grid container spacing={2} alignItems=\"center\">\n         <Grid item xs={12} md={3}>\n           <TextField\n             fullWidth\n             label=\"Cerca\"\n             value={search}\n             onChange={(e) => {\n               setSearch(e.target.value);\n               handleFilter(e.target.value);\n             }}\n           />\n         </Grid>\n         <Grid item xs={12} md={2}>\n           <FormControl fullWidth>\n             <InputLabel>Cerca per</InputLabel>\n             <Select\n               value={searchType}\n               label=\"Cerca per\"\n               onChange={(e) => {\n                 setSearchType(e.target.value);\n                 handleFilter(search, onlyVegan, e.target.value);\n               }}\n             >\n               <MenuItem value=\"all\">Tutti i campi</MenuItem>\n               <MenuItem value=\"name\">Nome</MenuItem>\n               <MenuItem value=\"producer\">Produttore</MenuItem>\n             </Select>\n           </FormControl>\n         </Grid>\n         <Grid item xs={12} md={3}>\n           <FormControl fullWidth>\n             <InputLabel>Nazione</InputLabel>\n             <Select\n               value={selectedCountry}\n               label=\"Nazione\"\n               onChange={(e) => {\n                 setSelectedCountry(e.target.value);\n                 handleFilter(search, onlyVegan, searchType, e.target.value);\n               }}\n             >\n               <MenuItem value=\"\">Tutte</MenuItem>\n               {countries.map(country => (\n                 <MenuItem key={country} value={country}>{country}</MenuItem>\n               ))}\n             </Select>\n           </FormControl>\n         </Grid>\n         <Grid item xs={12} md={2}>\n           <FormControlLabel\n             control={\n               <Checkbox\n                 checked={onlyVegan}\n                 onChange={(e) => {\n                   setOnlyVegan(e.target.checked);\n                   handleFilter(search, e.target.checked);\n                 }}\n               />\n             }\n             label=\"Solo vegani\"\n           />\n         </Grid>\n         <Grid item xs={12} md={2}>\n           <Button \n             variant=\"contained\" \n             fullWidth\n             onClick={() => setOpenAdvanced(true)}\n           >\n             Ricerca avanzata\n           </Button>\n         </Grid>\n       </Grid>\n     </Paper>\n\n     <Dialog open={openAdvanced} onClose={() => setOpenAdvanced(false)}>\n       <DialogTitle>Ricerca avanzata</DialogTitle>\n       <DialogContent>\n         <Grid container spacing={2} sx={{ pt: 1 }}>\n           <Grid item xs={12}>\n             <TextField\n               fullWidth\n               label=\"Nome vino\"\n               value={advancedFilters.name}\n               onChange={(e) => setAdvancedFilters({...advancedFilters, name: e.target.value})}\n             />\n           </Grid>\n           <Grid item xs={12}>\n             <TextField\n               fullWidth\n               label=\"Produttore\"\n               value={advancedFilters.producer}\n               onChange={(e) => setAdvancedFilters({...advancedFilters, producer: e.target.value})}\n             />\n           </Grid>\n           <Grid item xs={12}>\n             <FormControl fullWidth>\n               <InputLabel>Nazione</InputLabel>\n               <Select\n                 value={advancedFilters.country}\n                 label=\"Nazione\"\n                 onChange={(e) => setAdvancedFilters({...advancedFilters, country: e.target.value})}\n               >\n                 <MenuItem value=\"\">Tutte</MenuItem>\n                 {countries.map(country => (\n                   <MenuItem key={country} value={country}>{country}</MenuItem>\n                 ))}\n               </Select>\n             </FormControl>\n           </Grid>\n           <Grid item xs={12}>\n             <FormControlLabel\n               control={\n                 <Checkbox\n                   checked={advancedFilters.vegan}\n                   onChange={(e) => setAdvancedFilters({...advancedFilters, vegan: e.target.checked})}\n                 />\n               }\n               label=\"Solo vegani\"\n             />\n           </Grid>\n         </Grid>\n       </DialogContent>\n       <DialogActions>\n         <Button onClick={() => setOpenAdvanced(false)}>Annulla</Button>\n         <Button onClick={handleAdvancedSearch} variant=\"contained\">Cerca</Button>\n       </DialogActions>\n     </Dialog>\n   </>\n );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination } from '@mui/material';\n\nfunction WineList({ wines, page, setPage, rowsPerPage, setRowsPerPage }) {\n const handleChangePage = (event, newPage) => {\n   setPage(newPage);\n };\n\n const handleChangeRowsPerPage = (event) => {\n   setRowsPerPage(parseInt(event.target.value, 10));\n   setPage(0);\n };\n\n return (\n   <Paper sx={{ mt: 2 }}>\n     <TableContainer>\n       <Table>\n         <TableHead>\n           <TableRow>\n             <TableCell>Nome</TableCell>\n             <TableCell>Produttore</TableCell>\n             <TableCell>Origine</TableCell>\n             <TableCell>Etichetta</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {wines\n             .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n             .map((wine, index) => (\n               <TableRow key={index} hover>\n                 <TableCell>{wine.name}</TableCell>\n                 <TableCell>{wine.producer}</TableCell>\n                 <TableCell>{wine.origin}</TableCell>\n                 <TableCell>{wine.label}</TableCell>\n               </TableRow>\n           ))}\n         </TableBody>\n       </Table>\n     </TableContainer>\n     <TablePagination\n       rowsPerPageOptions={[10, 25, 50]}\n       component=\"div\"\n       count={wines.length}\n       rowsPerPage={rowsPerPage}\n       page={page}\n       onPageChange={handleChangePage}\n       onRowsPerPageChange={handleChangeRowsPerPage}\n     />\n   </Paper>\n );\n}\n\nexport default WineList;\n","import React from 'react';\nimport { Paper, Typography, Grid, Box, Button } from '@mui/material';\n\nfunction Statistics({ wines, onShowGlobalStats }) {\n  const totalWines = wines.length;\n  const veganWines = wines.filter(wine => {\n    const label = wine.label.toLowerCase();\n    return !label.includes('not vegan') && label.includes('vegan friendly');\n  }).length;\n  \n  const uniqueCountries = [...new Set(wines.map(wine => wine.origin))];\n  const currentCountry = uniqueCountries.length === 1 ? uniqueCountries[0] : '';\n\n  return (\n    <Paper sx={{ p: 2 }}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={12} md={3}>\n          <Box>\n            <Typography variant=\"h6\">Totale vini</Typography>\n            <Typography variant=\"h4\">{totalWines}</Typography>\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Box>\n            <Typography variant=\"h6\">Vini vegani</Typography>\n            <Typography variant=\"h4\">\n              {veganWines} ({((veganWines/totalWines)*100).toFixed(1)}%)\n            </Typography>\n          </Box>\n        </Grid>\n        {currentCountry && (\n          <Grid item xs={12} md={3}>\n            <Box>\n              <Typography variant=\"h6\">Nazione</Typography>\n              <Typography variant=\"h4\">{currentCountry}</Typography>\n            </Box>\n          </Grid>\n        )}\n        <Grid item xs={12} md={3}>\n          <Button \n            variant=\"outlined\" \n            onClick={onShowGlobalStats}\n            fullWidth\n          >\n            Statistiche globali\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Statistics;\n","import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { Container, CssBaseline, ThemeProvider, createTheme, Dialog, DialogTitle, DialogContent, Typography } from '@mui/material';\nimport SearchBar from './components/SearchBar';\nimport WineList from './components/WineList';\nimport Statistics from './components/Statistics';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#722F37',\n    },\n  },\n});\n\nfunction App() {\n  const [wines, setWines] = useState([]);\n  const [filteredWines, setFilteredWines] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [openStats, setOpenStats] = useState(false);\n\n  useEffect(() => {\n    Papa.parse('/barnivore_new.csv', {\n      download: true,\n      header: true,\n      complete: (results) => {\n        const validData = results.data.filter(wine => \n          wine.name && wine.producer && wine.origin && wine.label\n        );\n        setWines(validData);\n        setFilteredWines(validData);\n      }\n    });\n  }, []);\n\n  const getGlobalStats = () => {\n    const countryStats = wines.reduce((acc, wine) => {\n      const isVegan = !wine.label.toLowerCase().includes('not vegan') && \n                     wine.label.toLowerCase().includes('vegan friendly');\n      \n      if (!acc[wine.origin]) {\n        acc[wine.origin] = { total: 0, vegan: 0 };\n      }\n      \n      acc[wine.origin].total += 1;\n      if (isVegan) acc[wine.origin].vegan += 1;\n      \n      return acc;\n    }, {});\n\n    return Object.entries(countryStats)\n      .sort((a, b) => b[1].total - a[1].total)\n      .map(([country, stats]) => ({\n        country,\n        total: stats.total,\n        vegan: stats.vegan,\n        percentage: ((stats.vegan / stats.total) * 100).toFixed(1)\n      }));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <SearchBar \n          wines={wines} \n          setFilteredWines={setFilteredWines}\n          setPage={setPage}\n        />\n        <Statistics \n          wines={filteredWines}\n          onShowGlobalStats={() => setOpenStats(true)}\n        />\n        <WineList \n          wines={filteredWines}\n          page={page}\n          setPage={setPage}\n          rowsPerPage={rowsPerPage}\n          setRowsPerPage={setRowsPerPage}\n        />\n        <Dialog \n          open={openStats} \n          onClose={() => setOpenStats(false)}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle>Statistiche globali vini vegani</DialogTitle>\n          <DialogContent>\n            {getGlobalStats().map(stat => (\n              <Typography key={stat.country} sx={{ mb: 1 }}>\n                {stat.country}: {stat.vegan} vini vegani su {stat.total} ({stat.percentage}%)\n              </Typography>\n            ))}\n          </DialogContent>\n        </Dialog>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}